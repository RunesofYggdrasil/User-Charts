generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id       Int     @id @default(autoincrement())
  username String
  password String
  charts   Chart[]

  @@map("users")
}

model Chart {
  id         Int         @id @default(autoincrement())
  user       User        @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId     Int
  publicity  Boolean     @default(false)
  chartType  ChartType   @map("chart_type") @default(Square)
  characters Character[]
  pairings   Pairing[]
  reltypes   RelType[]

  @@map("charts")
}

model Character {
  id          Int       @id @default(autoincrement())
  firstName   String    @map("first_name")
  lastName    String    @map("last_name")
  age         Int
  chart       Chart     @relation(fields: [chartId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  chartId     Int
  pairingsOne Pairing[] @relation(name: "CharacterOne")
  pairingsTwo Pairing[] @relation(name: "CharacterTwo")

  @@map("characters")
}

model Pairing {
  id             Int       @id @default(autoincrement())
  name           String
  characterOne   Character @relation(name: "CharacterOne", fields: [characterOneId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  characterOneId Int
  characterTwo   Character @relation(name: "CharacterTwo", fields: [characterTwoId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  characterTwoId Int
  permitted      Boolean   @default(true)
  relValues      Int[]
  chart          Chart     @relation(fields: [chartId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  chartId        Int

  @@map("pairings")
}

model RelType {
  id      Int    @id @default(autoincrement())
  name    String
  hexCode String @map("hex_code") @db.VarChar(6)
  chart   Chart  @relation(fields: [chartId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  chartId Int

  @@map("rel_types")
}

enum ChartType {
  Circle
  Square

  @@map("chart_type_enum")
}
